{"ast":null,"code":"/*import router from '@/router';*/\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    login() {\n      const requestData = {\n        type: 1,\n        name: this.username,\n        password: this.password\n      };\n      var vm = this;\n      fetch(\"/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      }).then(response => response.json()).then(data => {\n        if (data.code === 1) {\n          localStorage.setItem(\"Adm_id\", data.data.id);\n          vm.$router.replace('/AdmHome');\n        } else {\n          // Login failed\n          alert(\"用户名或密码错误，Login failed. \");\n        }\n      }).catch(error => {\n        // Handle any error that occurred during the request\n        console.error(\"Error occurred during login:\", error);\n        alert(\"An error occurred during login. Please try again later.\");\n      });\n    }\n  }\n  /*components: { router }*/\n};","map":{"version":3,"names":["data","username","password","methods","login","requestData","type","name","vm","fetch","method","headers","body","JSON","stringify","then","response","json","code","localStorage","setItem","id","$router","replace","alert","catch","error","console"],"sources":["src/views/AdmLogin.vue"],"sourcesContent":["<template>\n  <body style=\"{backgroundImage:'url('+require('../../resource/image/background.jpg')+')'}\">\n    <div class=\"container\" >\n      <div class=\"wrap\">\n        <div class=\"logo\">\n          <img src=\"../../resource/image/libirary.png\" alt=\"厦门大学logo\">\n        </div>\n  \n        <div class=\"form\">\n          <h1>图书馆管理员登录系统</h1>\n          <div >\n            <form class=\"xxx\">\n  \n              <div class=\"inputbox\">\n                <span class=\"inputplace\">\n                  <img alt=\"user\" src=\"../../resource/image/user.png\" class=\"icon\"> \n                  <input v-model=\"username\" type=\"text\" placeholder=\"用户名\" id=\"username\">\n                </span>\n              </div>\n              <div class=\"inputbox\">\n                <span class=\"inputplace\">  \n                  <img alt=\"password\" src=\"../../resource/image/password.png\" class=\"icon\">               \n                  <input v-model=\"password\" type=\"password\" placeholder=\"密码\" id=\"password\">                   \n                </span>\n              </div>\n              <button type=\"button\" @click=\"login\">登录</button>\n            </form>\n            <div class=\"\">\n              <router-link to=\"/home\">\n              <a  style=\"position: absolute;left: 10%;color: #ffffff;\">以用户登录</a>\n            </router-link>\n              <router-link to=\"\">\n                <p  style=\"position:absolute;right: 10%; color:#ffffff\"> 忘记密码</p>\n              </router-link>\n              \n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  </body>\n  </template>\n  \n  \n  <script>\n/*import router from '@/router';*/\n\n  export default {\n    data() {\n        return {\n            username: \"\",\n            password: \"\",\n        };\n    },\n    methods: {\n        login() {\n            const requestData = {\n                type: 1,\n                name: this.username,\n                password: this.password,\n            };\n            var vm = this;\n            fetch(\"/api/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(requestData),\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                if (data.code === 1) {\n                    localStorage.setItem(\"Adm_id\",data.data.id);\n                    vm.$router.replace('/AdmHome');\n                }\n                else {\n                    // Login failed\n                    alert(\"用户名或密码错误，Login failed. \");\n                }\n            })\n                .catch((error) => {\n                // Handle any error that occurred during the request\n                console.error(\"Error occurred during login:\", error);\n                alert(\"An error occurred during login. Please try again later.\");\n            });\n        },\n    },\n    /*components: { router }*/\n};\n  </script>\n  \n  \n  \n\n<style scoped>\n       * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            zoom: 1.0; /* 禁止页面缩放 */\n            background-image:url(\"../../resource/image//background.jpg\") !important;\n            background-size: cover;\n            background-repeat: no-repeat;\n            font-family: Arial, sans-serif;\n        }\n\n        .container {\n          background-image:url(\"../../resource/image//background.jpg\") !important;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            margin: 0 auto;  \n        }\n\n      .wrap {\n            background: rgb(0, 0, 0,0.5);\n            box-shadow: none;\n            zoom:1;\n            padding: 0 20px 10px;\n            width: 28%;\n            position:fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%,-50%);\n            min-height: 460px;\n            max-height: 460px;\n            border-radius: 10px;\n        }\n        \n      \n\n        .logo {\n            text-align: center;\n            margin-top: 20px;\n            margin-bottom: 10px;\n        }\n\n        .logo img {\n            width: 50px;\n            height: auto;\n            color: white;\n        }\n\n        .form {\n            background-color: rgb(0,0,0,0);\n            border-radius: 10px;\n            padding: 10px;\n            padding-bottom: 20px;\n        }\n\n        .form h1 {\n            text-align: center;\n            color: #ffffff;\n            font-size: 20px;\n            margin-bottom: 10px;\n        }\n\n        .form p {\n            text-align: center;\n            color: #999999;\n            font-size: 14px;\n            margin-bottom: 20px;\n        }\n\n        .form input {\n            display: block;\n            width: 80%;\n            margin: 0 auto;\n            border: none;\n            border-bottom: 1px solid #cccccc;\n            padding: 15px;\n            margin: 20px;\n            font-size: 16px;\n        }\n\n        .form input:focus {\n            outline: none;\n            border-bottom-color: #0099ff;\n        }\n\n        .form button {\n            display: block;\n            width: 85%;\n            margin: 60px auto;\n            border: none;\n            border-radius: 5px;\n            background-color: #226ea1;\n            color: white;\n            padding: 10px;\n            font-size: 18px;\n        }\n\n        .form button:hover {\n            cursor: pointer;\n        }\n        .inputbox {\n            background-color: #ffffff;\n            margin: 20px;\n            border-radius: 5px;\n        }\n\n        .inputplace{\n            line-height: 1\n        }\n        .inputplace img {\n            display: inline; /* 图片以行内元素方式显示 */\n            vertical-align: middle; /* 用于垂直居中图片和文字 */\n            width: 10%;\n            height: auto;\n            margin-left: 5%;\n            opacity:0.4;\n        }\n        .inputplace input{\n            display: inline; /* 段落以行内元素方式显示 */\n             margin: 0; /* 可以去除默认的段落外边距 */\n             vertical-align: middle; /* 用于垂直居中图片和文字 */\n        }\n  </style>\n\n\n"],"mappings":"AA8CA;;AAEA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,MAAAC,WAAA;QACAC,IAAA;QACAC,IAAA,OAAAN,QAAA;QACAC,QAAA,OAAAA;MACA;MACA,IAAAM,EAAA;MACAC,KAAA;QACAC,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAT,WAAA;MACA,GACAU,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAf,IAAA;QACA,IAAAA,IAAA,CAAAkB,IAAA;UACAC,YAAA,CAAAC,OAAA,WAAApB,IAAA,CAAAA,IAAA,CAAAqB,EAAA;UACAb,EAAA,CAAAc,OAAA,CAAAC,OAAA;QACA,OACA;UACA;UACAC,KAAA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;QACAF,KAAA;MACA;IACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}