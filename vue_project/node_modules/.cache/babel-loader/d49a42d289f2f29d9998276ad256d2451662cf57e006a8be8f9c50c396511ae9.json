{"ast":null,"code":"import axios from 'axios';\nimport MessageDate from '@/Test_data/Message';\nexport default {\n  data() {\n    return {\n      MessageDate,\n      input: '',\n      totalPage: [],\n      // 所有分页的数据\n      pageSize: 9,\n      // 每页显示数量\n      pageNum: 1,\n      // 共几页=所有数据/每页现实数量     \n      dataShow: [],\n      // 当前显示的数据  \n      currentPage: 0 // 默认当前显示第一页\n    };\n  },\n\n  async created() {\n    this.pageNum = Math.ceil(this.MessageDate.length / this.pageSize) || 1; //计算有多少页数据，默认为1\n\n    // 循环页面\n    for (let i = 0; i < this.pageNum; i++) {\n      // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\n      // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\n      this.totalPage[i] = this.MessageDate.slice(this.pageSize * i, this.pageSize * (i + 1));\n    }\n\n    // 获取到数据后默认显示第一页内容\n    this.dataShow = this.totalPage[this.currentPage];\n  },\n  methods: {\n    nextPage() {\n      if (this.currentPage === this.pageNum - 1) return;\n      this.dataShow = this.totalPage[++this.currentPage];\n    },\n    // 上一页\n    prePage() {\n      if (this.currentPage === 0) return;\n      this.dataShow = this.totalPage[--this.currentPage];\n    },\n    // 点击页码\n    page(i) {\n      this.currentPage = i;\n      this.dataShow = this.totalPage[i - 1];\n    },\n    created() {\n      this.pageNum = Math.ceil(this.MessageDate.length / this.pageSize) || 1; //计算有多少页数据，默认为1\n\n      // 循环页面\n      for (let i = 0; i < this.pageNum; i++) {\n        // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\n        // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\n        this.totalPage[i] = this.MessageDate.slice(this.pageSize * i, this.pageSize * (i + 1));\n      }\n\n      // 获取到数据后默认显示第一页内容\n      this.dataShow = this.totalPage[this.currentPage];\n    }\n  },\n  mounted() {\n    //发送异步请求，获取数据\n    axios.get(\"\");\n  }\n};","map":{"version":3,"names":["axios","MessageDate","data","input","totalPage","pageSize","pageNum","dataShow","currentPage","created","Math","ceil","length","i","slice","methods","nextPage","prePage","page","mounted","get"],"sources":["src/views/MessageView.vue"],"sourcesContent":["<template>\r\n    <body>  \r\n      <!--左侧导航栏-->\r\n      <div class=\"sidenav\">\r\n        <div class=\"LogoBox\">\r\n        <img src=\"../../resource/logo.png\" style=\"height: 35px;\">\r\n        </div>\r\n        <div class=\"TextBox\">\r\n        <div>Library management system</div>\r\n        </div>\r\n        <div class='card-holder' style=\"margin-top: 70px;\">\r\n          <div class='card-wrapper'>\r\n          <router-link to='/message'>\r\n          <div class='card bg-01'>\r\n          <span class='card-content'>图书基本信息 #1</span>\r\n          </div>\r\n          </router-link>\r\n          </div>\r\n          <div class='card-wrapper'>\r\n          <router-link to=\"/return\">\r\n          <div class='card bg-02'>\r\n          <span class='card-content'>归还图书 #2</span>\r\n          </div>\r\n          </router-link>\r\n          </div>\r\n          <div class='card-wrapper'>\r\n          <router-link to='/record'>\r\n          <div class='card bg-03'>\r\n          <span class='card-content'>借阅管理 #3</span>\r\n          </div>\r\n          </router-link>\r\n          </div>\r\n          <div class='card-wrapper'>\r\n          <router-link to=\"/info\">\r\n          <div class='card bg-04'>\r\n          <span class='card-content'>用户中心 #4</span>\r\n          </div>\r\n          </router-link>\r\n          </div>\r\n          <div class='card-wrapper'>\r\n          <a href='#'>\r\n          <div class='card bg-05'>\r\n          <span class='card-content'>修改密码 #5</span>\r\n          </div>\r\n          </a>\r\n          </div>\r\n          <div class='card-wrapper'>\r\n          <a href='#'>\r\n          <div class='card bg-06'>\r\n          <span class='card-content'>了解更多</span>\r\n          </div>\r\n          </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n<!--主体部分-->\r\n<div class=\"main\">\r\n  <div class=\"el-header\"></div>\r\n  <el-divider style=\" border-top: 1px dashed #e8eaec;\"></el-divider>\r\n  <div class=\"SearchBox\" style=\"margin-left: 100px;\">\r\n    <select name=\"搜索方式\" id=\"selectWay\" class=\"selectWays\">\r\n        <option value=\"Name\">书名</option>\r\n        <option value=\"Author\">作者</option>\r\n        <option value=\"Publishers\">出版商</option>\r\n        <option value=\"ISBN\">ISBN</option>\r\n    </select>\r\n    <div class=\"input\" v-model=\"input\" placeholder=\"请输入内容\" style=\"width: 50%; margin-left: 70px;\"></div>\r\n    <el-button type=\"primary\" plain style=\"margin-left: 70px; background-color: rgb(255, 255, 255); border-color: 2px solid #577797; color:#577797\">搜索</el-button>\r\n\r\n\r\n  </div>\r\n  <br><br><br>\r\n\r\n<div class=\"BoxRow\">\r\n<div v-for=\"(items,index) of  3 \" :key=\"MessageDate[index].b_Id\" :span=\"3\" class=\"box1\" @click=\"$router.push('/detail/${MessageDate[index]}')\">\r\n            <div class=\"box\">\r\n              <img src=\"../../resource/temp1.jpg\">\r\n              <el-divider></el-divider>\r\n              <div style=\"color:black;font-size: 20px;\">《{{ MessageDate[index].b_Name }}》</div>\r\n            </div>\r\n            <div class=\"mask\">\r\n             <div style=\"font-size: 20px; color:aliceblue\">现有存量：{{ MessageDate[index].b_Cur_Collection }}</div>\r\n            </div>\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n\r\n<div class=\"BoxRow\">\r\n<div v-for=\"(items,index) of  3 \" :key=\"MessageDate[index+3].b_Id\" :span=\"3\" class=\"box1\" @click=\"$router.push('/detail?id={MessageDate[index+3]}')\">\r\n            <div class=\"box\">\r\n              <img src=\"../../resource/temp1.jpg\">\r\n              <el-divider></el-divider>\r\n              <div style=\"color:black;font-size: 20px;\">《{{ MessageDate[index+3].b_Name }}》</div>\r\n            </div>\r\n            <div class=\"mask\">\r\n             <div style=\"font-size: 20px; color:aliceblue\">现有存量：{{ MessageDate[index].b_Cur_Collection }}</div>\r\n            </div>\r\n    </div>\r\n</div>\r\n<br>\r\n\r\n<div class=\"BoxRow\">\r\n<div v-for=\"(items,index) of  3 \" :key=\"MessageDate[index+6].b_Id\" :span=\"3\" class=\"box1\"  @click=\"$router.push('/detail?id={MessageDate[index+6].b_Id}')\">\r\n            <div class=\"box\">\r\n              <img src=\"../../resource/temp1.jpg\">\r\n              <el-divider></el-divider>\r\n              <div style=\"color:black;font-size: 20px;\">《{{ MessageDate[index+6].b_Name }}》</div>\r\n            </div>\r\n            <div class=\"mask\">\r\n             <div style=\"font-size: 20px; color:aliceblue\">现有存量：{{ MessageDate[index].b_Cur_Collection }}</div>\r\n            </div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n<el-pagination\r\n  background\r\n  layout=\"prev, pager, next\"\r\n  :total=this.pageNum>\r\n</el-pagination>\r\n</div>\r\n    </body>\r\n</template>\r\n  <script>\r\n  import axios from 'axios';\r\n  import MessageDate from '@/Test_data/Message'\r\nexport default {\r\n\r\n  data(){\r\n    return{\r\n      MessageDate,\r\n      input:'' ,\r\n      totalPage: [], // 所有分页的数据\r\n      pageSize: 9, // 每页显示数量\r\n      pageNum: 1,  // 共几页=所有数据/每页现实数量     \r\n      dataShow: [], // 当前显示的数据  \r\n      currentPage: 0 // 默认当前显示第一页\r\n\r\n\r\n\r\n    }\r\n    \r\n\r\n  },\r\n   async created(){\r\n            this.pageNum = Math.ceil(this.MessageDate.length / this.pageSize) || 1;//计算有多少页数据，默认为1\r\n\r\n            // 循环页面\r\n            for (let i = 0; i < this.pageNum; i++) {\r\n            // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\r\n            // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\r\n            this.totalPage[i] = this.MessageDate.slice(this.pageSize * i, this.pageSize * (i + 1))\r\n            }\r\n\r\n            // 获取到数据后默认显示第一页内容\r\n            this.dataShow = this.totalPage[this.currentPage];\r\n          },\r\n  methods:{\r\n    nextPage() {\r\n              if (this.currentPage === this.pageNum - 1) return ;\r\n              this.dataShow = this.totalPage[++this.currentPage];\r\n            },\r\n            // 上一页\r\n            prePage() {\r\n              if (this.currentPage === 0) return ;\r\n              this.dataShow = this.totalPage[--this.currentPage];\r\n            },\r\n            // 点击页码\r\n            page(i){\r\n                this.currentPage = i\r\n                this.dataShow = this.totalPage[i-1];\r\n            },\r\n            created(){\r\n            this.pageNum = Math.ceil(this.MessageDate.length / this.pageSize) || 1;//计算有多少页数据，默认为1\r\n\r\n            // 循环页面\r\n            for (let i = 0; i < this.pageNum; i++) {\r\n            // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\r\n            // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\r\n            this.totalPage[i] = this.MessageDate.slice(this.pageSize * i, this.pageSize * (i + 1))\r\n            }\r\n\r\n            // 获取到数据后默认显示第一页内容\r\n            this.dataShow = this.totalPage[this.currentPage];\r\n          },\r\n\r\n  },\r\n  mounted(){\r\n    //发送异步请求，获取数据\r\n    axios.get(\"\")\r\n  }\r\n  };\r\n  </script>\r\n  <style>\r\n  .TestBox{\r\n    background-color:#000;\r\n    height: 200px;\r\n    width:25%;\r\n  }\r\n .sidenav {\r\n  height: 100%;\r\n  width: 200px;\r\n  position: fixed;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #556c75;\r\n  overflow-x: hidden;\r\n  padding-top: 20px;\r\n}\r\n.main {\r\n  margin-left: 200px; /* 与 sidenav 的宽度相同 */\r\n  padding: 0px 10px;\r\n  height:100%;\r\n  width:100%;\r\n  position:fixed;\r\n  overflow-y: scroll;\r\n  background-color: #fff;\r\n}\r\n@media screen and (max-height: 450px) {\r\n  .sidenav {padding-top: 15px;}\r\n  .sidenav a {font-size: 18px;}\r\n}\r\n.el-header{\r\n    background-color: #ffffff;\r\n    color: #333;\r\n    text-align: center;\r\n    height: 70px;\r\n    width:100%;\r\n  }\r\na:link,\r\na:hover,\r\na:visited,\r\na:active {\r\n color: #fff;\r\n text-decoration: none;\r\n}\r\n\r\n.card-holder { \r\n position: fixed;\r\n width: 0px;\r\n overflow: visible;\r\n}\r\n.card-wrapper {\r\n display: inline-block;\r\n float: right;\r\n clear: both;\r\n}\r\n.card {\r\n position: relative;\r\n left: 32px;\r\n padding: 16px 32px 16px 64px;\r\n margin: 16px; \r\n background: #fff;\r\n transition: all 0.3s ease-in-out 0.1s;\r\n}\r\n\r\n.card:hover {\r\n position: relative;\r\n left: 100%;\r\n margin-left: -32px;\r\n transition: all 0.3s ease-in-out;\r\n}\r\n.card-content {\r\n display: inline-block;\r\n color: #fff;\r\n font-family: 'Droid Sans', sans-serif;\r\n font-size: 16px;\r\n font-weight: bold;\r\n white-space: nowrap;\r\n}\r\n.bg-01 { background: #75a7c6 ; }\r\n.bg-02 { background: #81b9db; }\r\n.bg-03 { background: #90d1f2; }\r\n.bg-04 { background: #5c936c; }\r\n.bg-05 { background: #7ec994; }\r\n.bg-06 { background: #a6b05a; }\r\n\r\n.LogoBox{\r\n  width:100%;\r\n  height:70px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.TextBox{\r\n  width:100%;\r\n  height:70px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  color:#fff;\r\n}\r\n\t#itemBox ul{\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n\t#itemBox li{\r\n\t\tpadding: 3px;\r\n\t\tlist-style: none;\r\n\t\tmargin-right: 15px;\r\n\t\tborder: 1px solid #eee;\r\n\t}\r\n\t#itemBox img{\r\n\t\twidth: 200px;\r\n\t\theight: 150px;\r\n\t}\r\n\r\n.SearchBox{\r\n  margin-left: 200px;\r\n  width:100px;\r\n  height:50px;\r\n  align-content: center;\r\n  display: flex;\r\n  justify-content:space-around;\r\n  background-color: #010607;\r\n}\r\n/*卡片样式*/\r\n.box1 {\r\n            width: 300px;\r\n            height: 300px;\r\n            /* background-color: salmon; */\r\n            border-radius: 18px;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n        .box{\r\n            width: 300px;\r\n            height: 300px;\r\n            box-sizing: border-box;\r\n            font-size: 28px;\r\n            border-radius: 18px;\r\n            color: #fff;\r\n            padding: 38px 0 38px 0;\r\n            position: absolute;\r\n            perspective: 1000px;\r\n            transition: 0.5s ease-in-out;\r\n            text-align: center;\r\n            justify-content: center;\r\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n        }\r\n        .box img{\r\n          width:120px;\r\n        }\r\n        .mask{\r\n            width: 300px;\r\n            height: 300px;\r\n            background-color: #3b4b52;\r\n            border-radius: 18px;\r\n            text-align: center;\r\n            line-height: 320px;\r\n            font-family: '微软雅黑';\r\n            font-weight: bold;\r\n            position: absolute;\r\n            backface-visibility:hidden;\r\n            perspective: 1000px;\r\n            transform: rotateY(-180deg);\r\n            transition: 0.5s ease-in-out;\r\n            display:flex;\r\n            flex-direction: column;\r\n\r\n        }\r\n        .maskText{\r\n          width:280px;\r\n          height:300px;\r\n          font-family: '微软雅黑';\r\n          flex-direction: row;\r\n          align-content: center;\r\n          \r\n        }\r\n        .box1:hover .box{\r\n            transform: rotateY(-180deg);\r\n        }\r\n        .box1:hover .mask{\r\n            transform: rotateY(-360deg);\r\n        }\r\n\r\n.BoxRow{\r\n  width:80%;\r\n  margin-right: 80px;\r\n  height: 400px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n  </style>"],"mappings":"AA4HA,OAAAA,KAAA;AACA,OAAAC,WAAA;AACA;EAEAC,KAAA;IACA;MACAD,WAAA;MACAE,KAAA;MACAC,SAAA;MAAA;MACAC,QAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,WAAA;IAIA;EAGA;;EACA,MAAAC,QAAA;IACA,KAAAH,OAAA,GAAAI,IAAA,CAAAC,IAAA,MAAAV,WAAA,CAAAW,MAAA,QAAAP,QAAA;;IAEA;IACA,SAAAQ,CAAA,MAAAA,CAAA,QAAAP,OAAA,EAAAO,CAAA;MACA;MACA;MACA,KAAAT,SAAA,CAAAS,CAAA,SAAAZ,WAAA,CAAAa,KAAA,MAAAT,QAAA,GAAAQ,CAAA,OAAAR,QAAA,IAAAQ,CAAA;IACA;;IAEA;IACA,KAAAN,QAAA,QAAAH,SAAA,MAAAI,WAAA;EACA;EACAO,OAAA;IACAC,SAAA;MACA,SAAAR,WAAA,UAAAF,OAAA;MACA,KAAAC,QAAA,QAAAH,SAAA,QAAAI,WAAA;IACA;IACA;IACAS,QAAA;MACA,SAAAT,WAAA;MACA,KAAAD,QAAA,QAAAH,SAAA,QAAAI,WAAA;IACA;IACA;IACAU,KAAAL,CAAA;MACA,KAAAL,WAAA,GAAAK,CAAA;MACA,KAAAN,QAAA,QAAAH,SAAA,CAAAS,CAAA;IACA;IACAJ,QAAA;MACA,KAAAH,OAAA,GAAAI,IAAA,CAAAC,IAAA,MAAAV,WAAA,CAAAW,MAAA,QAAAP,QAAA;;MAEA;MACA,SAAAQ,CAAA,MAAAA,CAAA,QAAAP,OAAA,EAAAO,CAAA;QACA;QACA;QACA,KAAAT,SAAA,CAAAS,CAAA,SAAAZ,WAAA,CAAAa,KAAA,MAAAT,QAAA,GAAAQ,CAAA,OAAAR,QAAA,IAAAQ,CAAA;MACA;;MAEA;MACA,KAAAN,QAAA,QAAAH,SAAA,MAAAI,WAAA;IACA;EAEA;EACAW,QAAA;IACA;IACAnB,KAAA,CAAAoB,GAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}